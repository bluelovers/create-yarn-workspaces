{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/5/13/013.\n */\n\nimport * as findYarnWorkspaceRoot from 'find-yarn-workspace-root';\nimport * as path from 'path';\nimport * as pkgDir from 'pkg-dir';\nimport * as fs from 'fs';\n\nimport { Console2 } from 'debug-color2';\n\nexport const console = new Console2(null, {\n\tlabel: true,\n\ttime: true,\n});\n\nexport interface IOptions\n{\n\tcwd?: string,\n\n\tignoreParentWorkspaces?: boolean,\n\tignoreExistsPackage?: boolean,\n\n\tinitPackageJson?<T = any>(current: ReturnType<typeof getDefaultPackageJson>): ReturnType<typeof getDefaultPackageJson> | ReturnType<typeof getDefaultPackageJson> & T,\n\n\tdebug?: boolean,\n}\n\nexport function createYarnWorkspaces(cwd?: string, options: IOptions = {})\n{\n\tif (cwd && typeof cwd != 'string')\n\t{\n\t\toptions = cwd;\n\t\tcwd = options.cwd;\n\t}\n\n\tif (!cwd)\n\t{\n\t\tcwd = process.cwd();\n\t}\n\n\tcwd = path.resolve(cwd);\n\n\tlet root: string = pkgDir.sync(cwd);\n\n\tlet ws: string;\n\n\ttry\n\t{\n\t\t// @FIXME 一個奇怪的BUG 不使用 try 的話 在 NPX 底下就會出現無訊息的停止\n\t\tws = findYarnWorkspaceRoot(root);\n\t}\n\tcatch (e)\n\t{\n\t\tconsole.log(e.toString());\n\n\t\tws = null;\n\t}\n\n\tlet targetPath = path.resolve(root || cwd);\n\n\toptions.debug && console.debug({\n\t\ttargetPath,\n\t\tws,\n\t\toptions,\n\t});\n\n\tif (!options.ignoreExistsPackage && root)\n\t{\n\t\tconsole.error(`already have package at \"${root}\", or use ignoreExistsPackage for overwrite it`);\n\n\t\treturn false;\n\t}\n\telse if (root)\n\t{\n\t\tconsole.warn(`ignore exists package \"${root}\"`);\n\t}\n\n\tif (ws)\n\t{\n\t\tlet bool: boolean = true;\n\n\t\tconsole.warn(`detect exists workspace \"${ws}\"`);\n\n\t\tif (options.ignoreParentWorkspaces)\n\t\t{\n\t\t\tbool = isSamePath(targetPath, ws);\n\n\t\t\tif (!bool)\n\t\t\t{\n\t\t\t\tconsole.warn(`ignoreParentWorkspaces = true`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(`target path already is workspace`);\n\t\t\t}\n\t\t}\n\n\t\tif (bool)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn _createYarnWorkspaces(targetPath);\n}\n\nexport function isSamePath(p1: string, p2: string)\n{\n\tif (p1 === p2)\n\t{\n\t\treturn true;\n\t}\n\telse if (!p1 || !p2)\n\t{\n\t\treturn false;\n\t}\n\n\tlet s = path.relative(p1, p2);\n\treturn (s === '.' || s === '');\n}\n\nexport function _createYarnWorkspaces(targetPath: string, options: IOptions = {})\n{\n\tconsole.info(`create in target path \"${targetPath}\"`);\n\n\tlet pkg: ReturnType<typeof getDefaultPackageJson>;\n\n\tlet lerna;\n\n\t{\n\t\tlet file = path.join(targetPath, 'lerna.json');\n\n\t\tif (fs.existsSync(file))\n\t\t{\n\t\t\tlet json = JSON.parse(fs.readFileSync(file).toString());\n\n\t\t\tif (json.packages && !Object.keys(json.packages).length)\n\t\t\t{\n\t\t\t\tjson.packages = undefined;\n\t\t\t}\n\n\t\t\tlerna = json;\n\t\t}\n\t}\n\n\tlet packages = lerna && lerna.packages || [\n\t\t\"packages/*\",\n\t];\n\n\tlet file = path.join(targetPath, 'package.json');\n\n\tif (!fs.existsSync(file))\n\t{\n\t\tlet name = path.basename(targetPath);\n\n\t\tif (!fs.existsSync(targetPath))\n\t\t{\n\t\t\tfs.mkdirSync(targetPath);\n\t\t}\n\n\t\tpkg = Object.assign(getDefaultPackageJson(name), {\n\t\t\tname,\n\t\t\tworkspaces: packages,\n\t\t});\n\n\t\tif (options.initPackageJson)\n\t\t{\n\t\t\tlet ret = options.initPackageJson(pkg);\n\n\t\t\tif (ret)\n\t\t\t{\n\t\t\t\tpkg = ret;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tlet json = JSON.parse(fs.readFileSync(file).toString());\n\n\t\tlet workspaces;\n\n\t\tif (json.workspaces && Object.keys(json.workspaces).length)\n\t\t{\n\t\t\tworkspaces = json.workspaces;\n\n\t\t\t// https://yarnpkg.com/blog/2018/02/15/nohoist/\n\t\t\tpackages = workspaces.packages || workspaces;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tworkspaces = packages;\n\t\t}\n\n\t\tpkg = Object.assign(json, {\n\t\t\t\"private\": true,\n\t\t\t\"workspaces\": workspaces,\n\t\t});\n\n\t\tpkg.resolutions = pkg.resolutions || {};\n\t}\n\n\tlet s = JSON.stringify(pkg, null, 2);\n\tfs.writeFileSync(file, s);\n\n\tconsole.success(`create workspace package.json`);\n\n\tif (lerna && (packages != lerna.packages || lerna.npmClient !== 'yarn' || lerna.useWorkspaces !== true))\n\t{\n\t\tlet file = path.join(targetPath, 'lerna.json');\n\n\t\tlerna.packages = packages;\n\t\tlerna.npmClient = 'yarn';\n\t\tlerna.useWorkspaces = true;\n\n\t\tlet s = JSON.stringify(lerna, null, 2);\n\t\tfs.writeFileSync(file, s);\n\n\t\tconsole.info(`update lerna.json`);\n\t}\n\telse if (!lerna)\n\t{\n\t\tlet file = path.join(targetPath, 'lerna.json');\n\n\t\tlerna = {\n\t\t\t\"packages\": packages,\n\t\t\t\"npmClient\": \"yarn\",\n\t\t\t\"useWorkspaces\": true,\n\t\t\t\"version\": \"independent\",\n\t\t};\n\n\t\tlet s = JSON.stringify(lerna, null, 2);\n\t\tfs.writeFileSync(file, s);\n\n\t\tconsole.success(`create lerna.json`);\n\t}\n\n\tif (!fs.existsSync(path.join(targetPath, 'tsconfig.json')))\n\t{\n\t\tfs.writeFileSync(path.join(targetPath, 'tsconfig.json'), JSON.stringify(getDefaultTsconfig(), null, 2));\n\n\t\tconsole.success(`create tsconfig.json`);\n\t}\n\n\tcreateDirByPackages(targetPath, packages);\n\n\treturn true;\n}\n\nexport function getDefaultTsconfig()\n{\n\treturn {\n\t\textends: \"@bluelovers/tsconfig/sourcemap/mapfile.json\"\n\t}\n}\n\nexport function getDefaultPackageJson(name?: string): {\n\tname: string;\n\tversion: string;\n\tprivate: boolean;\n\tworkspaces: string[];\n\tscripts: {\n\t\t[k: string]: string;\n\t\ttest?: string;\n\t};\n\tresolutions: {\n\t\t[k: string]: string;\n\t};\n\t[k: string]: any;\n}\n{\n\treturn {\n\t\t\"name\": name,\n\t\t\"version\": \"1.0.0\",\n\t\t\"private\": true,\n\t\t\"workspaces\": [\n\t\t\t\"packages/*\"\n\t\t],\n\t\t\"scripts\": {\n\t\t\t\"sort-package-json\": \"oao run-script \\\"sort-package-json2\\\"\",\n\t\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n\t\t},\n\t\t\"devDependencies\": {\n\t\t\t\"@bluelovers/tsconfig\": \"^1.0.1\"\n\t\t},\n\t\t\"resolutions\": {}\n\t};\n}\n\nexport function createDirByPackages(cwd: string, packages: string[])\n{\n\treturn packages.some(function (value)\n\t{\n\t\tlet bool: boolean;\n\n\t\tlet s = value.split(/[\\/\\\\]/)[0];\n\n\t\tif (!/[!?\\*{}\\[\\]]/.test(s))\n\t\t{\n\t\t\tlet dir = path.join(cwd, s);\n\n\t\t\tif (!fs.existsSync(dir))\n\t\t\t{\n\t\t\t\tfs.mkdirSync(dir);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn bool;\n\t})\n}\n\nexport default createYarnWorkspaces;\n"]}